import { isPremium, addPoints, getPoints } from './userData.js'; // adapte si besoin !

export async function showAd(type) {
  // V√©rifie si Premium une seule fois
  const premium = await isPremium();
  if (premium) {
    if (type === "rewarded") {
      await addPoints(10);
      alert("üéÅ Bonus Premium : 10 pi√®ces sans pub !");
    } else if (type === "interstitial") {
      alert("‚ú® Premium actif : aucune pub !");
    } else if (type === "premium") {
      alert("‚úÖ Tu es d√©j√† Premium !");
    }
    await updatePointsDisplay();
    return;
  }

  // V√©rifie le consentement RGPD/publicit√©s avant de lancer la pub r√©elle
  const consent = window.userConsent || localStorage.getItem("rgpdConsent");
  if (consent !== "accept") {
    alert("‚ö†Ô∏è Tu dois accepter les publicit√©s personnalis√©es dans les param√®tres pour profiter de cette fonctionnalit√©.");
    return;
  }

  // PUB R√âELLE (AppLovin/Lovapp/AdMob) √Ä INT√âGRER ICI si besoin :
  // if (type === "rewarded") { showRealRewardedAd(); ... }

  // Simul√© pour l'instant :
  if (type === "rewarded") {
    alert("üéÅ Pub vue ! Tu gagnes 100 pi√®ces.");
    await addPoints(100);
    await updatePointsDisplay();
  } else if (type === "interstitial") {
    alert("üì∫ Merci d'avoir vu la pub ! Le duel va commencer.");
  } else if (type === "premium") {
    alert("‚ú® Cette option est disponible dans la version Premium.");
  } else {
    console.warn("Type de pub inconnu :", type);
  }
}

// Fonction utilitaire pour MAJ affichage points si besoin
export async function updatePointsDisplay() {
  const pointsSpan = document.getElementById("points");
  if (pointsSpan) pointsSpan.textContent = await getPoints();
}
